{"ast":null,"code":"// Code in this api route runs only on server.\n// Never exposed to client. Safe to use credentials.\nimport { MongoClient } from \"mongodb\"; // The function we define here will be triggered when a request is send to api/newmeetup\n\nasync function handler(req, res) {\n  if (req === 'POST') {\n    const data = req.body; //const { title, image, address, description } = data\n    // Mongo Client returns a promise. So change is to awake and make the parents function async. \n\n    const client = await MongoClient.connect('mongodb+srv://cluster0:Password95@cluster0.cuhicor.mongodb.net/?retryWrites=true&w=majority');\n    const db = client.db(); // Collections => Table, Documents => Entries\n\n    const meetupsCollection = db.collection('meetups'); // result will be the automatically generated ID\n\n    const result = await meetupsCollection.insertOne(data);\n    console.log(result);\n    client.close;\n    res.status(201).json({\n      message: 'Meetup inserted!'\n    });\n  }\n}\n\nexport default handler;\nexport const config = {\n  api: {\n    externalResolver: true\n  }\n};","map":{"version":3,"sources":["C:/Users/richu/Documents/React/Meet up NextJS/pages/api/newmeetup.js"],"names":["MongoClient","handler","req","res","data","body","client","connect","db","meetupsCollection","collection","result","insertOne","console","log","close","status","json","message","config","api","externalResolver"],"mappings":"AAAA;AACA;AAEA,SAASA,WAAT,QAA4B,SAA5B,C,CAEA;;AACA,eAAeC,OAAf,CAAuBC,GAAvB,EAA4BC,GAA5B,EAAiC;AAC7B,MAAGD,GAAG,KAAK,MAAX,EAAkB;AACd,UAAME,IAAI,GAAGF,GAAG,CAACG,IAAjB,CADc,CAEd;AACA;;AACA,UAAMC,MAAM,GAAG,MAAMN,WAAW,CAACO,OAAZ,CAAoB,6FAApB,CAArB;AACA,UAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX,CALc,CAMd;;AACA,UAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B,CAPc,CAQd;;AACA,UAAMC,MAAM,GAAG,MAAMF,iBAAiB,CAACG,SAAlB,CAA4BR,IAA5B,CAArB;AACAS,IAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AACAL,IAAAA,MAAM,CAACS,KAAP;AAEAZ,IAAAA,GAAG,CAACa,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAACC,MAAAA,OAAO,EAAE;AAAV,KAArB;AACH;AACJ;;AAED,eAAejB,OAAf;AACA,OAAO,MAAMkB,MAAM,GAAG;AAClBC,EAAAA,GAAG,EAAE;AACHC,IAAAA,gBAAgB,EAAE;AADf;AADa,CAAf","sourcesContent":["// Code in this api route runs only on server.\r\n// Never exposed to client. Safe to use credentials.\r\n\r\nimport { MongoClient } from \"mongodb\";\r\n\r\n// The function we define here will be triggered when a request is send to api/newmeetup\r\nasync function handler(req, res) {\r\n    if(req === 'POST'){\r\n        const data = req.body\r\n        //const { title, image, address, description } = data\r\n        // Mongo Client returns a promise. So change is to awake and make the parents function async. \r\n        const client = await MongoClient.connect('mongodb+srv://cluster0:Password95@cluster0.cuhicor.mongodb.net/?retryWrites=true&w=majority')\r\n        const db = client.db()\r\n        // Collections => Table, Documents => Entries\r\n        const meetupsCollection = db.collection('meetups')\r\n        // result will be the automatically generated ID\r\n        const result = await meetupsCollection.insertOne(data)\r\n        console.log(result)\r\n        client.close;\r\n\r\n        res.status(201).json({message: 'Meetup inserted!'})\r\n    }\r\n}\r\n\r\nexport default handler;\r\nexport const config = {\r\n    api: {\r\n      externalResolver: true,\r\n    },\r\n  }\r\n"]},"metadata":{},"sourceType":"module"}