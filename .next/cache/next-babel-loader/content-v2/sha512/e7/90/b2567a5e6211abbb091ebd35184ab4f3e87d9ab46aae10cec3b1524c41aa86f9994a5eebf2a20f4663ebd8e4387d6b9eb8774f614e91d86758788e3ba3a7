{"ast":null,"code":"// Code in this api route runs only on server.\n// Never exposed to client. Safe to use credentials.\nimport { MongoClient } from \"mongodb\"; // The function we define here will be triggered when a request is send to api/newmeetup\n\nasync function handler(req, res) {\n  if (req === 'POST') {\n    try {\n      const data = req.body; //const { title, image, address, description } = data\n      // Mongo Client returns a promise. So change is to awake and make the parents function async. \n\n      const client = await MongoClient.connect('mongodb+srv://cluster0:Password95@cluster0.cuhicor.mongodb.net/?retryWrites=true&w=majority');\n      const db = client.db(); // Collections => Table, Documents => Entries\n\n      const meetupsCollection = db.collection('meetups'); // result will be the automatically generated ID\n\n      const result = await meetupsCollection.insertOne(data);\n      console.log(result);\n      client.close; // res.status(201).json({message: 'Meetup inserted!'})\n    } catch (err) {\n      res.status(err).json({});\n    }\n  } else {\n    res.status(405);\n    res.end;\n  }\n}\n\nexport default handler;","map":{"version":3,"sources":["C:/Users/richu/Documents/React/Meet up NextJS/pages/api/newmeetup.js"],"names":["MongoClient","handler","req","res","data","body","client","connect","db","meetupsCollection","collection","result","insertOne","console","log","close","err","status","json","end"],"mappings":"AAAA;AACA;AAEA,SAASA,WAAT,QAA4B,SAA5B,C,CAEA;;AACA,eAAeC,OAAf,CAAuBC,GAAvB,EAA4BC,GAA5B,EAAiC;AAC7B,MAAGD,GAAG,KAAK,MAAX,EAAkB;AACd,QAAG;AACC,YAAME,IAAI,GAAGF,GAAG,CAACG,IAAjB,CADD,CAEC;AACA;;AACA,YAAMC,MAAM,GAAG,MAAMN,WAAW,CAACO,OAAZ,CAAoB,6FAApB,CAArB;AACA,YAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX,CALD,CAMC;;AACA,YAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B,CAPD,CAQC;;AACA,YAAMC,MAAM,GAAG,MAAMF,iBAAiB,CAACG,SAAlB,CAA4BR,IAA5B,CAArB;AACAS,MAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AACAL,MAAAA,MAAM,CAACS,KAAP,CAXD,CAaC;AACH,KAdD,CAcE,OAAMC,GAAN,EAAU;AACRb,MAAAA,GAAG,CAACc,MAAJ,CAAWD,GAAX,EAAgBE,IAAhB,CAAqB,EAArB;AACH;AAEJ,GAnBD,MAmBM;AACFf,IAAAA,GAAG,CAACc,MAAJ,CAAW,GAAX;AACAd,IAAAA,GAAG,CAACgB,GAAJ;AACH;AACJ;;AAED,eAAelB,OAAf","sourcesContent":["// Code in this api route runs only on server.\r\n// Never exposed to client. Safe to use credentials.\r\n\r\nimport { MongoClient } from \"mongodb\";\r\n\r\n// The function we define here will be triggered when a request is send to api/newmeetup\r\nasync function handler(req, res) {\r\n    if(req === 'POST'){\r\n        try{\r\n            const data = req.body\r\n            //const { title, image, address, description } = data\r\n            // Mongo Client returns a promise. So change is to awake and make the parents function async. \r\n            const client = await MongoClient.connect('mongodb+srv://cluster0:Password95@cluster0.cuhicor.mongodb.net/?retryWrites=true&w=majority')\r\n            const db = client.db()\r\n            // Collections => Table, Documents => Entries\r\n            const meetupsCollection = db.collection('meetups')\r\n            // result will be the automatically generated ID\r\n            const result = await meetupsCollection.insertOne(data)\r\n            console.log(result)\r\n            client.close;\r\n    \r\n            // res.status(201).json({message: 'Meetup inserted!'})\r\n        } catch(err){\r\n            res.status(err).json({})\r\n        }\r\n        \r\n    } else{\r\n        res.status(405)\r\n        res.end\r\n    }\r\n}\r\n\r\nexport default handler;"]},"metadata":{},"sourceType":"module"}