{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\richu\\\\Documents\\\\React\\\\Meet up NextJS\\\\pages\\\\[meetupId]\\\\index.js\";\nimport React from \"react\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\"; // You need to import getStaticPaths if you're using getStaticPros in a dynamic page.\n\nexport default function meetupDetails() {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: \"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1200px-Stadtbild_M%C3%BCnchen.jpg?20130611211153\",\n    title: \"A first meetup\",\n    address: \"Some street 5, some city\",\n    desciption: \"The meetup description\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n} // export async function getStaticPaths() {\n//   const client = await MongoClient.connect(\n//     \"mongodb+srv://cluster0:Password95@cluster0.cuhicor.mongodb.net/?retryWrites=true&w=majority\"\n//   );\n//   const db = client.db();\n//   const meetupsCollection = db.collection(\"meetups\");\n//   const meetups = await meetupsCollection.find({ _id: 1 }).toArray(); //Empty means all fields, but since we only need id\n//   client.close();\n//   return {\n//     fallback: false,\n//     paths: meetups.map((meetup) => ({\n//       params: { meetupId: meetup._id.toString() },\n//     })),\n//   };\n// }\n// export async function getStaticProps(context) {\n//   // You can use context to get params. Cannot use useRouter().\n//   const meetupId = context.params.meetupId;\n//   const client = await MongoClient.connect(\n//     \"mongodb+srv://cluster0:Password95@cluster0.cuhicor.mongodb.net/?retryWrites=true&w=majority\"\n//   );\n//   const db = client.db();\n//   const meetupsCollection = db.collection(\"meetups\");\n//   const selectedMeetup = await meetupsCollection.findOne({ _id: meetupId }); //Empty means all fields, but since we only need id\n//   client.close();\n//   return {\n//     props: {\n//       meetupData: selectedMeetup\n//     },\n//   };\n// }","map":{"version":3,"sources":["C:/Users/richu/Documents/React/Meet up NextJS/pages/[meetupId]/index.js"],"names":["React","MeetupDetail","meetupDetails"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,uCAAzB,C,CAEA;;AAEA,eAAe,SAASC,aAAT,GAAyB;AACtC,sBACE,QAAC,YAAD;AACE,IAAA,KAAK,EAAC,uIADR;AAEE,IAAA,KAAK,EAAC,gBAFR;AAGE,IAAA,OAAO,EAAC,0BAHV;AAIE,IAAA,UAAU,EAAC;AAJb;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from \"react\";\r\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\r\n\r\n// You need to import getStaticPaths if you're using getStaticPros in a dynamic page.\r\n\r\nexport default function meetupDetails() {\r\n  return (\r\n    <MeetupDetail\r\n      image=\"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1200px-Stadtbild_M%C3%BCnchen.jpg?20130611211153\"\r\n      title=\"A first meetup\"\r\n      address=\"Some street 5, some city\"\r\n      desciption=\"The meetup description\"\r\n    />\r\n  );\r\n}\r\n\r\n// export async function getStaticPaths() {\r\n//   const client = await MongoClient.connect(\r\n//     \"mongodb+srv://cluster0:Password95@cluster0.cuhicor.mongodb.net/?retryWrites=true&w=majority\"\r\n//   );\r\n//   const db = client.db();\r\n//   const meetupsCollection = db.collection(\"meetups\");\r\n//   const meetups = await meetupsCollection.find({ _id: 1 }).toArray(); //Empty means all fields, but since we only need id\r\n//   client.close();\r\n//   return {\r\n//     fallback: false,\r\n//     paths: meetups.map((meetup) => ({\r\n//       params: { meetupId: meetup._id.toString() },\r\n//     })),\r\n//   };\r\n// }\r\n\r\n// export async function getStaticProps(context) {\r\n//   // You can use context to get params. Cannot use useRouter().\r\n//   const meetupId = context.params.meetupId;\r\n  \r\n//   const client = await MongoClient.connect(\r\n//     \"mongodb+srv://cluster0:Password95@cluster0.cuhicor.mongodb.net/?retryWrites=true&w=majority\"\r\n//   );\r\n//   const db = client.db();\r\n//   const meetupsCollection = db.collection(\"meetups\");\r\n//   const selectedMeetup = await meetupsCollection.findOne({ _id: meetupId }); //Empty means all fields, but since we only need id\r\n//   client.close();\r\n\r\n//   return {\r\n//     props: {\r\n//       meetupData: selectedMeetup\r\n//     },\r\n//   };\r\n// }\r\n"]},"metadata":{},"sourceType":"module"}