{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\richu\\\\Documents\\\\React\\\\Meet up NextJS\\\\pages\\\\[meetupId]\\\\index.js\";\nimport React, { Fragment } from \"react\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\nimport Head from 'next/head'; // You need to import getStaticPaths if you're using getStaticPros in a dynamic page.\n\nexport var __N_SSG = true;\nexport default function MeetupDetails(props) {\n  console.log(\"props are \" + props.meetupData);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MeetupDetail, {\n      image: props.meetupData.image,\n      title: props.meetupData.title,\n      address: props.meetupData.address,\n      description: props.meetupData.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}\n_c = MeetupDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupDetails\");","map":{"version":3,"sources":["C:/Users/richu/Documents/React/Meet up NextJS/pages/[meetupId]/index.js"],"names":["React","Fragment","MeetupDetail","Head","MeetupDetails","props","console","log","meetupData","image","title","address","description"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,YAAP,MAAyB,uCAAzB;AAEA,OAAOC,IAAP,MAAiB,WAAjB,C,CACA;;;AAEA,eAAe,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC3CC,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAeF,KAAK,CAACG,UAAjC;AAEA,sBACE,QAAC,QAAD;AAAA,4BACE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,YAAD;AACE,MAAA,KAAK,EAAEH,KAAK,CAACG,UAAN,CAAiBC,KAD1B;AAEE,MAAA,KAAK,EAAEJ,KAAK,CAACG,UAAN,CAAiBE,KAF1B;AAGE,MAAA,OAAO,EAAEL,KAAK,CAACG,UAAN,CAAiBG,OAH5B;AAIE,MAAA,WAAW,EAAEN,KAAK,CAACG,UAAN,CAAiBI;AAJhC;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD;KAhBuBR,a","sourcesContent":["import React, { Fragment } from \"react\";\r\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\r\nimport { MongoClient, ObjectId } from \"mongodb\";\r\nimport Head from 'next/head'\r\n// You need to import getStaticPaths if you're using getStaticPros in a dynamic page.\r\n\r\nexport default function MeetupDetails(props) {\r\n  console.log(\"props are \" + props.meetupData);\r\n\r\n  return (\r\n    <Fragment>\r\n      <Head>\r\n\r\n      </Head>\r\n      <MeetupDetail\r\n        image={props.meetupData.image}\r\n        title={props.meetupData.title}\r\n        address={props.meetupData.address}\r\n        description={props.meetupData.description}\r\n      />\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport async function getStaticPaths() {\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://cluster0:Password95@cluster0.cuhicor.mongodb.net/?retryWrites=true&w=majority\"\r\n  );\r\n\r\n  const db = client.db();\r\n  const meetupsCollection = db.collection(\"meetups\");\r\n  const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray(); //Empty means all fields, but since we only need id\r\n\r\n  client.close();\r\n  return {\r\n    fallback: false,\r\n    paths: meetups.map((meetup) => ({\r\n      params: { meetupId: meetup._id.toString() },\r\n    })),\r\n  };\r\n}\r\n\r\nexport async function getStaticProps(context) {\r\n  // You can use context to get params. Cannot use useRouter().\r\n  const meetupId = context.params.meetupId;\r\n\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://cluster0:Password95@cluster0.cuhicor.mongodb.net/?retryWrites=true&w=majority\"\r\n  );\r\n  const db = client.db();\r\n  const meetupsCollection = db.collection(\"meetups\");\r\n\r\n  const selectedMeetup = await meetupsCollection.findOne({\r\n    _id: ObjectId(meetupId),\r\n  }); //Empty means all fields, but since we only need id\r\n  client.close();\r\n\r\n  return {\r\n    props: {\r\n      meetupData: {\r\n        id: selectedMeetup._id.toString(),\r\n        title: selectedMeetup.title,\r\n        address: selectedMeetup.address,\r\n        image: selectedMeetup.image,\r\n        description: selectedMeetup.description,\r\n      },\r\n    },\r\n  };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}